# Наименование воркфлоу
name: CI/CD Pipeline Testing and Deploy for my simple project java

# Триггеры и ветки для старта воркфлоу
on:
  push:
    branches:
      - main  # Воркфлоу запускается при пуше в ветку main
  pull_request:
    branches:
      - main  # Воркфлоу запускается при создании пул-реквеста в ветку main

# Джобы или задачи для выполнения
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}  # Запуск на разных операционных системах, указанных в матрице
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Разные операционные системы для тестирования
        include:
          - os: macos-latest
            architecture: x64  # Архитектура x64 для macOS
          - os: macos-latest
            architecture: arm64  # Архитектура arm64 для macOS
    steps:
      # Шаг 1: Копирование кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v3  # Используется action для копирования кода

      # Шаг 2: Установка JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3  # Используется action для установки Java
        with:
          java-version: '17'  # Версия Java
          distribution: 'adopt'  # Дистрибутив Java
          architecture: ${{ matrix.architecture }}  # Архитектура (из матрицы)

      # Шаг 3: Сборка проекта с помощью Maven
      - name: Build project
        run: mvn -B package  # Команда для сборки проекта

      # Шаг 4: Запуск тестов с помощью Maven
      - name: Run tests
        run: mvn -B test  # Команда для запуска тестов

  # Джоб для деплоя приложения
  deploy:
    runs-on: ubuntu-latest  # Запуск на Ubuntu
    needs: build-and-test  # Зависит от успешного завершения джоба build-and-test
    if: github.ref == 'refs/heads/main'  # Деплой выполняется только для ветки main
    steps:
      # Шаг 1: Копирование кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v3  # Используется action для копирования кода

      # Шаг 2: Настройка SSH-соединения
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0  # Используется action для настройки SSH
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Приватный SSH-ключ из секретов

      # Шаг 3: Добавление сервера в список доверенных хостов
      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_SERVER }} >> ~/.ssh/known_hosts  # Добавляет сервер в known_hosts

      # Шаг 4: Копирование файлов на сервер
      - name: Copy files to the server
        run: |
          scp -r target/*.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }}:/home/dn/myapp  # Копирует JAR-файлы на сервер

      # Шаг 5: Перезапуск приложения на сервере
      - name: Restart application on the server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }} "java -jar /home/dn/myapp/myapp.jar &"  # Запускает приложение на сервере